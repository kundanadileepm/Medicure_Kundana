---
- name: Install Prometheus and Grafana on monitoring node
  hosts: monitoring
  become: yes

  tasks:
    - name: Install dependencies
      apt:
        name:
          - wget
          - curl
          - apt-transport-https
          - software-properties-common
        state: present
        update_cache: yes

    - name: Create Prometheus user
      user:
        name: prometheus
        shell: /sbin/nologin

    - name: Create directories
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'
      loop:
        - /etc/prometheus
        - /var/lib/prometheus

    - name: Download Prometheus
      get_url:
        url: https://github.com/prometheus/prometheus/releases/download/v2.52.0/prometheus-2.52.0.linux-amd64.tar.gz
        dest: /tmp/prometheus.tar.gz

    - name: Extract Prometheus
      unarchive:
        src: /tmp/prometheus.tar.gz
        dest: /tmp/
        remote_src: yes

    - name: Move binaries
      copy:
        src: "/tmp/prometheus-2.52.0.linux-amd64/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        owner: prometheus
        group: prometheus
        mode: '0755'
        remote_src: yes
      loop:
        - prometheus
        - promtool

    - name: Copy Prometheus config
      copy:
        src: "/tmp/prometheus-2.52.0.linux-amd64/prometheus.yml"
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus
        mode: '0644'
        remote_src: yes

    - name: Create systemd service
      copy:
        dest: /etc/systemd/system/prometheus.service
        content: |
          [Unit]
          Description=Prometheus
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=prometheus
          Group=prometheus
          Type=simple
          ExecStart=/usr/local/bin/prometheus \
            --config.file=/etc/prometheus/prometheus.yml \
            --storage.tsdb.path=/var/lib/prometheus/ \
            --web.console.templates=/usr/share/prometheus/consoles \
            --web.console.libraries=/usr/share/prometheus/console_libraries

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Start and enable Prometheus
      systemd:
        name: prometheus
        state: started
        enabled: yes

    - name: Install dependencies
      apt:
        name:
          - apt-transport-https
          - software-properties-common
          - wget
        state: present
        update_cache: yes

    - name: Create Grafana keyring directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Grafana GPG key
      shell: |
        wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor | tee /etc/apt/keyrings/grafana.gpg > /dev/null
      args:
        executable: /bin/bash

    - name: Add Grafana APT repository
      copy:
        dest: /etc/apt/sources.list.d/grafana.list
        content: |
          deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main
          deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com beta main

    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install Grafana
      apt:
        name: grafana
        state: present

    - name: Enable and start Grafana service
      systemd:
        name: grafana-server
        enabled: yes
        state: started

    - name: Install Node Exporter
      shell: |
        wget https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz
        tar xvfz node_exporter-*.tar.gz
        mv node_exporter-*/node_exporter /usr/local/bin/
        useradd -rs /bin/false node_exporter
        echo "[Unit]
        Description=Node Exporter
        [Service]
        User=node_exporter
        ExecStart=/usr/local/bin/node_exporter
        [Install]
        WantedBy=default.target" > /etc/systemd/system/node_exporter.service
        systemctl daemon-reexec
        systemctl enable node_exporter
        systemctl start node_exporter
      args:
        executable: /bin/bash
